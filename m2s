#!/bin/bash

check-requirements() {
  for r in curl jq; do
    if ! which $r >/dev/null 2>&1; then
      echo "install $r"
      exit 1
    fi
  done
}

if [ ! -f config.sh ]; then
  echo "Not found config.sh; Please see README.md"
  exit 1
fi

SERVER=
USER_TOKEN=
SLACK_CHANNEL=
SLACK_WEB_HOOK=
source config.sh

check-config() {
  if [ -z "$SERVER" -o -z "$USER_TOKEN" -o -z "$SLACK_CHANNEL" -o -z "$SLACK_WEB_HOOK" ]; then
    echo "Invalid config.sh; missing some values"
    exit 1
  fi
}

check-request() {
  if ! curl -s "${SERVER}" >/dev/null ; then
    echo "Could not request to ${SERVER}"
    exit 1
  fi
}

stream-from() {
  URL="${SERVER}$1"
  curl -sLN -XGET -H "Authorization: Bearer ${USER_TOKEN}" "$URL" 2>&1
  echo
}

post-slack() {
  tmp=$(mktemp)
  cat >"$tmp"
  curl -X POST --data @${tmp} "$SLACK_WEB_HOOK"
  rm "$tmp"
}

do_update() {
  data="$1"
  username=$(echo "$data" | jq -r .account.acct)
  avatar=$(echo "$data" | jq -r .account.avatar)
  text=$(echo "$data" | jq .content)
  cat <<EOM
{
  "channel": "$SLACK_CHANNEL",
  "icon_url": "$avatar",
  "username": "$username",
  "text": $text
}
EOM
}

do_slack() {
  while read -r line; do
    if [ -z "$line" ]; then
      continue
    fi
    case "$line" in
      :thump )
        echo "heartbeat"
        ;;
      "event: update" )
        read -r line
        data=${line#data: }
        do_update "$data"
        do_update "$data" | post-slack
        ;;
      * )
        echo "[*] $line"
    esac
  done
}

check-requirements
check-config
check-request
stream-from "/api/v1/streaming/user" | do_slack

# vim: set tabstop=2 shiftwidth=2 softtabstop=2 expandtab:
